/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firealarmsystem;


import Models.Sensor;
import Models.User;
import RMIServer.Service;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author GRP
 */
public class AdminDashboard extends javax.swing.JFrame {
    
    
    
    //properties
    String id;
    String name;
    User user;
    /**
     * Creates new form CustomerReg
     */
    public AdminDashboard() {
        
        //avoid unauthorized Access
        
        //dispose
        close();
        JPanel pane5 = new JPanel();
                JOptionPane.showMessageDialog(pane5, "Unauthorised Access. Please Log-in to the System", "ByPassed Attempt", JOptionPane.ERROR_MESSAGE);
                
                
                
                
                System.exit(-1);
                
               
                
        
    }
    
    //dispose frame
    public void close(){
        dispose();
    }

    public AdminDashboard(User user) {
        initComponents();
        setLabels(user);
        
        //set Properties
        this.user=user;
        this.name=user.getName();
        
        
        //Get Data to Tables and Sensor Count Label
        popTableAndCount();
      
        //Get Data to Alert Table
        popTableAlert();
        
        //Start Auto Updte Table after 10 Seconds
        autoRefrsh();
        
        
        
        
        
        
    }
    
    // set User Data to JFRAME labels
    public void setLabels(User u1){
        
        // set LAbel
        uname.setText(u1.getName());
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addSensor = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        alert = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        alert1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        uname = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        EditandView = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fire Alarm System");
        setResizable(false);

        jPanel1.setLayout(null);

        addSensor.setBackground(new java.awt.Color(153, 0, 153));
        addSensor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addSensor.setForeground(new java.awt.Color(255, 255, 255));
        addSensor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gear.png"))); // NOI18N
        addSensor.setText("     Install A New Sensor");
        addSensor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSensorActionPerformed(evt);
            }
        });
        jPanel1.add(addSensor);
        addSensor.setBounds(130, 320, 290, 90);

        jButton5.setBackground(new java.awt.Color(255, 153, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 0, 51));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/log-out.png"))); // NOI18N
        jButton5.setText("Logout");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(50, 40, 120, 40);

        refresh.setBackground(new java.awt.Color(204, 255, 255));
        refresh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refresh.setForeground(new java.awt.Color(0, 102, 153));
        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/direction (1).png"))); // NOI18N
        refresh.setText("Refresh Details");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel1.add(refresh);
        refresh.setBounds(210, 250, 210, 50);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 33)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 204, 255));
        jLabel13.setText("Monitoring System");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(20, 640, 330, 110);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 204, 255));
        jLabel14.setText("Fire Alarm");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 590, 330, 110);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 65)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Dashboard");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 700, 340, 110);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2719387_origback.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(-40, -440, 400, 1290);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(null);

        jTable2.setBackground(new java.awt.Color(255, 204, 204));
        jTable2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(204, 0, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sensor ID", "Floor", "Room", "CO2 Level", "Smoke Level", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setGridColor(new java.awt.Color(255, 153, 153));
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(140, 710, 580, 140);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total Sensors");

        count.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        count.setForeground(new java.awt.Color(0, 255, 255));
        count.setText("55");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(26, 26, 26)
                .addComponent(count)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(count))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);
        jPanel3.setBounds(470, 230, 250, 60);

        alert.setBackground(new java.awt.Color(255, 0, 102));
        alert.setForeground(new java.awt.Color(255, 102, 102));
        alert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 30));
        jPanel2.add(alert);
        alert.setBounds(110, 680, 640, 200);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sensor ID", "Floor", "Room", "CO2 Level", "Smoke Level", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(130, 307, 596, 200);

        alert1.setBackground(new java.awt.Color(255, 0, 102));
        alert1.setForeground(new java.awt.Color(255, 102, 102));
        alert1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 30));
        jPanel2.add(alert1);
        alert1.setBounds(240, 650, 20, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 102));
        jLabel10.setText("Fire Alerts");
        jPanel2.add(jLabel10);
        jLabel10.setBounds(140, 650, 91, 22);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Sensor Details");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(130, 264, 160, 22);

        uname.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        uname.setForeground(new java.awt.Color(255, 255, 255));
        uname.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        uname.setText("Username");
        jPanel2.add(uname);
        uname.setBounds(220, 130, 500, 50);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Welcome");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(430, 50, 290, 110);

        EditandView.setBackground(new java.awt.Color(0, 204, 204));
        EditandView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        EditandView.setForeground(new java.awt.Color(0, 102, 102));
        EditandView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        EditandView.setText("    Edit / View");
        EditandView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditandViewActionPerformed(evt);
            }
        });
        jPanel2.add(EditandView);
        EditandView.setBounds(130, 540, 186, 59);

        Remove.setBackground(new java.awt.Color(255, 51, 51));
        Remove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Remove.setForeground(new java.awt.Color(255, 255, 255));
        Remove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        Remove.setText("    Remove");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });
        jPanel2.add(Remove);
        Remove.setBounds(350, 540, 188, 59);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/85751-digital-background-1920x1080-4k.jpg"))); // NOI18N
        jLabel8.setText("jLabel1");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(-330, -20, 1440, 1080);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(330, -50, 770, 900);

        jLabel7.setText("jLabel1");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, -70, 1100, 920);

        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(-6, -6, 1110, 850);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        try {
            
            
            //Initiate Server Service instance 
            System.setProperty("java.security.policy", "file:allowall.policy");
            Service service = (Service) Naming.lookup("rmi://localhost:1209/SensorServer");
            
           //Get Table model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            // get Selected Row
            int selectrw = jTable1.getSelectedRow();
            id = model.getValueAt(selectrw, 0).toString();
            
            
            // delete SelectedSensor
            if(service.deleteSensor(id)){
                
                JPanel pane5 = new JPanel();
                JOptionPane.showMessageDialog(pane5, "Delete the event Successfully", "Deleted", JOptionPane.INFORMATION_MESSAGE);
                popTableAndCount();
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            
            JPanel pane5 = new JPanel();
                JOptionPane.showMessageDialog(pane5, "Some Error Occured", "Error", JOptionPane.ERROR_MESSAGE);
        }
        






        //Re load data after Delete Sensor
        refresh();
        
        
        
    }//GEN-LAST:event_RemoveActionPerformed

    private void addSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSensorActionPerformed
        // TODO add your handling code here:
        
       //Shoe add sensor JFRAME
        new AddSensor().setVisible(true);
    }//GEN-LAST:event_addSensorActionPerformed

    private void EditandViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditandViewActionPerformed

         
        //get Table model
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        //get selected Row
        int selectrw = jTable1.getSelectedRow();
        id = model.getValueAt(selectrw, 0).toString();
        
        
        
        
       //Show sensor Editor/ Viewer to selected Sensor
        new EditSensor(id).setVisible(true);
        
        
    }//GEN-LAST:event_EditandViewActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
        //log out from Dashboard
        dispose();
        new ClientLogin().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        
        
            // reload data
            refresh();
            
        
    }//GEN-LAST:event_refreshActionPerformed

    public void refresh(){
        
        // reload data to main table
        popTableAndCount();
            
        // reload data to alert table
        popTableAlert();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }
    
    //load data to main table and update Sensor count label
     public void popTableAndCount(){
        
        try {
            
       //Initiate Server Service instance 
            
            System.setProperty("java.security.policy", "file:allowall.policy");
            Service service = (Service) Naming.lookup("rmi://localhost:1209/SensorServer");
            
           
            
            
            
            
            //get table model
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            //set row count to 0
            model.setRowCount(0);
            
            
            // get all sensor List 
            ArrayList<Sensor> array = service.getSensorList();
            
            
            //load data into table from array
            Object rawdata[] = new Object[6];
            
            for(int i=0; i<array.size();i++){
                
                rawdata[0]=array.get(i).getId();
                rawdata[1]=array.get(i).getLocation_floorNo();
                rawdata[2]=array.get(i).getLocation_roomNo();
                rawdata[3]=array.get(i).getCo2_level();
                rawdata[4]=array.get(i).getSmoke_level();
                rawdata[5]=array.get(i).getStatus();
                
                
                
                array.get(i).toString();
                
                //add row to table
                model.addRow(rawdata);
                
                
            }
            
            // get number of rows
            int coutInt= model.getRowCount();
            
            String ContS = String.valueOf(coutInt);
            
            //set count label to row count
             count.setText(ContS);
            
            
         
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            
             JPanel pane5 = new JPanel();
                    JOptionPane.showMessageDialog(pane5, "Error Loading the Sensor Contents", "Error", JOptionPane.ERROR_MESSAGE);
                    
             dispose();
             new ClientLogin().setVisible(true);
        }catch (NotBoundException ex) {
            
            System.out.println("Error 1");
            System.err.println(ex.getMessage());
        } catch (MalformedURLException ex) {
            System.out.println("Error 2");
            System.err.println(ex.getMessage());
        } catch (RemoteException ex) {
            System.out.println("Error 3");
            System.err.println(ex.getMessage());
            
        } catch (Exception ex) {
            
            
            JPanel pane5 = new JPanel();
                    JOptionPane.showMessageDialog(pane5, "Error Loading the Sensor Contents", "Error", JOptionPane.ERROR_MESSAGE);
                    
             dispose();
             new ClientLogin().setVisible(true);
            
            
        }

        
     }
     
    
     
     //load data to Alert table
     public void popTableAlert(){
         
        
        
        try {
           //Initiate Server Service instance 
            
            System.setProperty("java.security.policy", "file:allowall.policy");
            Service service = (Service) Naming.lookup("rmi://localhost:1209/SensorServer");
            
            
            
            
            
            //get table model
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            // set row count to 0
            model.setRowCount(0);
            
            // get all sensor List 
            ArrayList<Sensor> array = service.AlertSensorList();
            
            
            // load data into table from array
            Object rawdata[] = new Object[6];
            
            for(int i=0; i<array.size();i++){
                
                rawdata[0]=array.get(i).getId();
                rawdata[1]=array.get(i).getLocation_floorNo();
                rawdata[2]=array.get(i).getLocation_roomNo();
                rawdata[3]=array.get(i).getCo2_level();
                rawdata[4]=array.get(i).getSmoke_level();
                rawdata[5]=array.get(i).getStatus();
                
                
                
                array.get(i).toString();
                
                // add row to table
                model.addRow(rawdata);
                
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
            
             JPanel pane5 = new JPanel();
                    JOptionPane.showMessageDialog(pane5, "Error Loading the Alert Sensor Contents", "Error", JOptionPane.ERROR_MESSAGE);
                    
             dispose();
             new ClientLogin().setVisible(true);
        }catch (NotBoundException ex) {
            
            System.out.println("Error 1");
            System.err.println(ex.getMessage());
        } catch (MalformedURLException ex) {
            System.out.println("Error 2");
            System.err.println(ex.getMessage());
        } catch (RemoteException ex) {
            System.out.println("Error 3");
            System.err.println(ex.getMessage());
            
        } catch (Exception ex) {
            
            
            JPanel pane5 = new JPanel();
                    JOptionPane.showMessageDialog(pane5, "Error Loading the Sensor Contents", "Error", JOptionPane.ERROR_MESSAGE);
                    
             dispose();
             new ClientLogin().setVisible(true);
            
            
        }
        //show red color Labels
         showAlert();

        
     }
     
     //show red color labels if alert table has data rows
     public void showAlert(){
     // set properties
         alert.setVisible(false);
         alert1.setVisible(false);
         
         
         //get table model
          DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          
          // get row count of the table
          int rowcount=  model.getRowCount();
          
         
          
          // show labels if fowcount is greater than 0
          if(rowcount>0){
              
              alert.setVisible(true);
              alert1.setVisible(true);
              
          }else if(rowcount==0){
              
              alert.setVisible(false);
              alert1.setVisible(false);
              
              
          }
     
     
     
     
     }
     //load data in 10 second priods
     public void autoRefrsh(){
         
         // initiate a timer
         Timer timer = new Timer(15000, new ActionListener() {
               
             @Override
             public void actionPerformed(ActionEvent arg0) {
                 
                 // reload tables and data
                 refresh();
                 
             }
    
            
        });

            // set timer properties
            timer.setRepeats(true); // Only execute once
            timer.start();
     }
     
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditandView;
    private javax.swing.JButton Remove;
    private javax.swing.JButton addSensor;
    private javax.swing.JLabel alert;
    private javax.swing.JLabel alert1;
    private javax.swing.JLabel count;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton refresh;
    private javax.swing.JLabel uname;
    // End of variables declaration//GEN-END:variables
}
